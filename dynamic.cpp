#include <bits/stdc++.h>
#include<chrono>

using namespace std;
using namespace std::chrono;

int main() {

    int n = 20;
    int sizeI = 20, sizeJ = 20;
    vector<vector<int> > a = {	{ 999 ,1	,999	,999	,1	,1	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999 } ,
	{ 1	,999	,1	,999	,999	,999	,2	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999 } ,
	{ 999	,1	,999	,1	,999	,999	,999	,3	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999 } ,
	{ 999	,999	,1	,999	,2	,999	,999	,999	,3	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999 } ,
	{ 1	,999	,999	,2	,999	,999	,999	,999	,999	,4	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999 } ,
	{ 1	,999	,999	,999	,999	,999	,999	,999	,999	,999	,3	,2	,999	,999	,999	,999	,999	,999	,999	,999 } ,
	{ 999	,2	,999	,999	,999	,999	,999	,999	,999	,999	,999	,2	,3	,999	,999	,999	,999	,999	,999	,999 } ,
	{ 999	,999	,3	,999	,999	,999	,999	,999	,999	,999	,999	,999	,2	,2	,999	,999	,999	,999	,999	,999 } ,
	{ 999	,999	,999	,3	,999	,999	,999	,999	,999	,999	,999	,999	,999	,1	,1	,999	,999	,999	,999	,999 } ,
	{ 999	,999	,999	,999	,4	,999	,999	,999	,999	,999	,6	,999	,999	,999	,5	,999	,999	,999	,999	,999 } ,
	{ 999	,999	,999	,999	,999	,3	,999	,999	,999	,6	,999	,999	,999	,999	,999	,2	,999	,999	,999	,999 } ,
	{ 999	,999	,999	,999	,999	,2	,2	,999	,999  ,999	,999	,999	,999	,999	,999	,999	,2	,999	,999	,999 } ,
	{ 999	,999	,999	,999	,999	,999	,3	,2	,999	,999	,999	,999	,999	,999	,999	,999	,999	,2	,999	,999 } ,
	{ 999	,999	,999	,999	,999	,999	,999	,2	,1	,999	,999	,999	,999	,999	,999	,999	,999	,999	,2	,999 } ,
	{ 999	,999	,999	,999	,999	,999	,999	,999	,1	,5	,999	,999	,999	,999	,999	,999	,999	,999	,999	,2 } ,
	{ 999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,2	,999	,999	,999	,999	,999	,4	,999	,999	,7 } ,
	{ 999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,2	,999	,999	,999	,4	,999	,4	,999	,999 } ,
	{ 999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,2	,999	,999	,999	,4	,999	,4	,999 } ,
	{ 999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,2	,999	,999	,999	,4	,999	,4 } ,
	{ 999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,999	,2	,7	,999	,999	,4	,999 }	};

    auto startTime = steady_clock::now();
    vector<vector<int> > d((1 << n), vector<int>(n, 999));
    d[0][0] = 0;

    for (int mask = 0; mask < (1 << n); mask++) {
        for (int i = 0; i < n; i++) {
            if (d[mask][i] == 999)
                continue;
            for (int j = 0; j < n; j++)
                if (!(mask & (1 << j))) {
                    d[mask ^ (1 << j)][j] = std::min(d[mask | (1 << j)][j], d[mask][i] + a[i][j]);
                }
        }
    }
    auto finishTime = steady_clock::now();
    cout << d[(1 << n) - 1][0] << "\n";
    cout << "Time : " << duration_cast<microseconds>(finishTime - startTime).count() << " microsecond";
    return 0;
}
